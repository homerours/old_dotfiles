#!/bin/bash
# Functions

# Prepend sudo to a command
function run-with-sudo()
{
	LBUFFER="sudo $LBUFFER"
}

# Create directory and move into
function mcd()
{
	mkdir $1 && cd $1
}

# move to ~/.Trash instead of rm a file
function del()
{
	for i in $* ; do
		mv $i ~/.local/share/Trash/files/
	done
}

# Compress pdf using Ghostscript
function pdf_compress()
{
	gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/prepress -dNOPAUSE -dQUIET -dBATCH -sOutputFile=compressed_$1 $1
}

# Format pdf 2 pages per sheet and remove margins
# left, top, right and bottom margins
function pdf_sbs()
{
	pdfcrop --margins '0 0 0 0' $1 crop_$1;
	pdfnup --scale 1.00 --delta "-0.3cm 0cm -0cm 0cm" --outfile sbs_$1 crop_$1;
	rm crop_$1;
}

# Zip & Unzip file
function ctar()
{
	tar cvzf $1.tar.gz $1;
}
function xtar()
{
	tar xvzf $1;
}

# get the current IP adresses on eth0
function myip()
{
	MY_IP=$(/sbin/ifconfig eth0 | awk '/inet/ { print $2  } ' | sed -e s/adr:// | sed -e s/inet6://)
	if [ -z "$MY_IP" ]
	then
		MY_IP=$(/sbin/ifconfig wlan0 | awk '/inet/ { print $2  } ' | sed -e s/adr:// | sed -e s/inet6://)
	fi
	echo $MY_IP
}

# INFOS
function myinfos ()
{
	printf "CPU: "
	cat /proc/cpuinfo | grep "model name" | head -1 | awk '{ for (i = 4; i <= NF; i++) printf "%s ", $i  }'
	printf "\n"
	cat /etc/issue | awk '{ printf "OS: %s %s %s %s | " , $1 , $2 , $3 , $4  }'
	uname -a | awk '{ printf "Kernel: %s " , $3  }'
	uname -m | awk '{ printf "%s | " , $1  }'
	#kded4 --version | grep "KDE Development Platform" | awk '{ printf "KDE: %s", $4  }'
	printf "\n"
	uptime | awk '{ printf "Uptime: %s %s %s", $3, $4, $5  }' | sed 's/,//g'
	printf "\n"
	#cputemp | awk '{ printf "%s %s", $1 $2  }'
}

# Google from command line
function encode() { echo -n $@ | perl -pe's/([^-_.~A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg'; }
function google() { xdg-open http://www.google.com/search\?hl\=en\#q\="`encode $@`" ; }
function wiki() { xdg-open http://fr.wikipedia.org/w/index.php\?search\="`encode $@`" ; }

# Show group users
function members ()
{
	grep $1 /etc/group
}

function gimp_auto() {
	gimp -i -b '(batch-auto-levels "*.JPG")' -b '(gimp-quit 0)'
}

function mount_usb() {
	sudo mount -o rw,uid="$UID" /dev/sdc1 /home/leo/bounty
}

function umount_usb() {
	sudo umount /dev/sdc1
}

function tex_tpl() {
	git clone https://github.com/homerours/latex_style.git;
	if [ $# -eq 0 ]; then
		cp latex_style/example.tex ./;
	else
		cp latex_style/example.tex ./$1.tex;
	fi
	cp latex_style/gitignore ./.gitignore;
	rm -rf latex_style/.git;
	rm latex_style/README.md latex_style/example.tex latex_style/gitignore;
}
